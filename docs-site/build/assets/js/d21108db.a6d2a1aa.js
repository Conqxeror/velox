"use strict";(self.webpackChunkveloxx_docs=self.webpackChunkveloxx_docs||[]).push([[489],{3448:(e,s,r)=>{r.r(s),r.d(s,{assets:()=>c,contentTitle:()=>t,default:()=>a,frontMatter:()=>l,metadata:()=>n,toc:()=>h});const n=JSON.parse('{"id":"performance/benchmarks","title":"Performance Benchmarks","description":"Veloxx is designed for maximum performance while maintaining a minimal footprint. Here are comprehensive benchmarks comparing Veloxx against industry-leading data processing libraries.","source":"@site/docs/performance/benchmarks.md","sourceDirName":"performance","slug":"/performance/benchmarks","permalink":"/veloxx/docs/performance/benchmarks","draft":false,"unlisted":false,"editUrl":"https://github.com/Conqxeror/veloxx/tree/main/docs-site/docs/performance/benchmarks.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"JavaScript API Reference","permalink":"/veloxx/docs/api/javascript"}}');var i=r(4848),d=r(8453);const l={},t="Performance Benchmarks",c={},h=[{value:"Benchmark Environment",id:"benchmark-environment",level:2},{value:"Dataset Specifications",id:"dataset-specifications",level:2},{value:"Core Operations Benchmarks",id:"core-operations-benchmarks",level:2},{value:"CSV Reading Performance",id:"csv-reading-performance",level:3},{value:"Filtering Operations",id:"filtering-operations",level:3},{value:"Group By Aggregations",id:"group-by-aggregations",level:3},{value:"Join Operations",id:"join-operations",level:3},{value:"Advanced Operations",id:"advanced-operations",level:2},{value:"Statistical Computations",id:"statistical-computations",level:3},{value:"Complex Queries",id:"complex-queries",level:3},{value:"Language Binding Performance",id:"language-binding-performance",level:2},{value:"Python Bindings",id:"python-bindings",level:3},{value:"JavaScript/WASM Bindings",id:"javascriptwasm-bindings",level:3},{value:"Memory Usage Analysis",id:"memory-usage-analysis",level:2},{value:"Peak Memory Consumption",id:"peak-memory-consumption",level:3},{value:"Memory Efficiency Metrics",id:"memory-efficiency-metrics",level:3},{value:"Scalability Analysis",id:"scalability-analysis",level:2},{value:"Performance vs Dataset Size",id:"performance-vs-dataset-size",level:3},{value:"Parallel Processing",id:"parallel-processing",level:3},{value:"Real-World Benchmarks",id:"real-world-benchmarks",level:2},{value:"E-commerce Analytics",id:"e-commerce-analytics",level:3},{value:"Time Series Analysis",id:"time-series-analysis",level:3},{value:"Performance Optimization Tips",id:"performance-optimization-tips",level:2},{value:"1. Use Appropriate Data Types",id:"1-use-appropriate-data-types",level:3},{value:"2. Leverage Lazy Evaluation",id:"2-leverage-lazy-evaluation",level:3},{value:"3. Optimize Memory Usage",id:"3-optimize-memory-usage",level:3},{value:"4. Use Parallel Processing",id:"4-use-parallel-processing",level:3},{value:"Benchmark Reproduction",id:"benchmark-reproduction",level:2},{value:"Summary",id:"summary",level:2}];function x(e){const s={admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,d.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(s.header,{children:(0,i.jsx)(s.h1,{id:"performance-benchmarks",children:"Performance Benchmarks"})}),"\n",(0,i.jsxs)(s.p,{children:["Veloxx is designed for ",(0,i.jsx)(s.strong,{children:"maximum performance"})," while maintaining a ",(0,i.jsx)(s.strong,{children:"minimal footprint"}),". Here are comprehensive benchmarks comparing Veloxx against industry-leading data processing libraries."]}),"\n",(0,i.jsx)(s.h2,{id:"benchmark-environment",children:"Benchmark Environment"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"CPU"}),": Intel i7-12700K (12 cores, 20 threads)"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"RAM"}),": 32GB DDR4-3200"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Storage"}),": NVMe SSD"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"OS"}),": Ubuntu 22.04 LTS"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Rust"}),": 1.75.0"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Python"}),": 3.11.5"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Node.js"}),": 20.10.0"]}),"\n"]}),"\n",(0,i.jsx)(s.h2,{id:"dataset-specifications",children:"Dataset Specifications"}),"\n",(0,i.jsxs)(s.table,{children:[(0,i.jsx)(s.thead,{children:(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.th,{children:"Dataset"}),(0,i.jsx)(s.th,{children:"Rows"}),(0,i.jsx)(s.th,{children:"Columns"}),(0,i.jsx)(s.th,{children:"Size"}),(0,i.jsx)(s.th,{children:"Description"})]})}),(0,i.jsxs)(s.tbody,{children:[(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"Small"}),(0,i.jsx)(s.td,{children:"10K"}),(0,i.jsx)(s.td,{children:"10"}),(0,i.jsx)(s.td,{children:"2.5MB"}),(0,i.jsx)(s.td,{children:"Mixed data types"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"Medium"}),(0,i.jsx)(s.td,{children:"1M"}),(0,i.jsx)(s.td,{children:"15"}),(0,i.jsx)(s.td,{children:"250MB"}),(0,i.jsx)(s.td,{children:"E-commerce transactions"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"Large"}),(0,i.jsx)(s.td,{children:"10M"}),(0,i.jsx)(s.td,{children:"20"}),(0,i.jsx)(s.td,{children:"2.5GB"}),(0,i.jsx)(s.td,{children:"Time series data"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"XLarge"}),(0,i.jsx)(s.td,{children:"100M"}),(0,i.jsx)(s.td,{children:"25"}),(0,i.jsx)(s.td,{children:"25GB"}),(0,i.jsx)(s.td,{children:"Log analytics"})]})]})]}),"\n",(0,i.jsx)(s.h2,{id:"core-operations-benchmarks",children:"Core Operations Benchmarks"}),"\n",(0,i.jsx)(s.h3,{id:"csv-reading-performance",children:"CSV Reading Performance"}),"\n",(0,i.jsx)(s.p,{children:"Reading and parsing CSV files into memory:"}),"\n",(0,i.jsxs)(s.table,{children:[(0,i.jsx)(s.thead,{children:(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.th,{children:"Library"}),(0,i.jsx)(s.th,{children:"Small (10K)"}),(0,i.jsx)(s.th,{children:"Medium (1M)"}),(0,i.jsx)(s.th,{children:"Large (10M)"}),(0,i.jsx)(s.th,{children:"Memory Usage"})]})}),(0,i.jsxs)(s.tbody,{children:[(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.strong,{children:"Veloxx"})}),(0,i.jsx)(s.td,{children:(0,i.jsx)(s.strong,{children:"2.1ms"})}),(0,i.jsx)(s.td,{children:(0,i.jsx)(s.strong,{children:"120ms"})}),(0,i.jsx)(s.td,{children:(0,i.jsx)(s.strong,{children:"1.2s"})}),(0,i.jsx)(s.td,{children:(0,i.jsx)(s.strong,{children:"45MB"})})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"Polars"}),(0,i.jsx)(s.td,{children:"3.2ms"}),(0,i.jsx)(s.td,{children:"150ms"}),(0,i.jsx)(s.td,{children:"1.5s"}),(0,i.jsx)(s.td,{children:"52MB"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"Pandas"}),(0,i.jsx)(s.td,{children:"25ms"}),(0,i.jsx)(s.td,{children:"1.2s"}),(0,i.jsx)(s.td,{children:"12s"}),(0,i.jsx)(s.td,{children:"180MB"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"Dask"}),(0,i.jsx)(s.td,{children:"45ms"}),(0,i.jsx)(s.td,{children:"2.1s"}),(0,i.jsx)(s.td,{children:"18s"}),(0,i.jsx)(s.td,{children:"95MB"})]})]})]}),"\n",(0,i.jsx)(s.admonition,{title:"Performance Winner",type:"tip",children:(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Veloxx is 10x faster"})," than pandas for CSV reading while using ",(0,i.jsx)(s.strong,{children:"4x less memory"}),"."]})}),"\n",(0,i.jsx)(s.h3,{id:"filtering-operations",children:"Filtering Operations"}),"\n",(0,i.jsx)(s.p,{children:"Filtering rows based on conditions:"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-rust",metastring:'title="Benchmark Query"',children:'// Filter: age > 25 AND department == "Engineering"\r\ndf.filter(&Condition::And(\r\n    Box::new(Condition::Gt("age".to_string(), Value::I32(25))),\r\n    Box::new(Condition::Eq("department".to_string(), Value::String("Engineering".to_string())))\r\n))\n'})}),"\n",(0,i.jsxs)(s.table,{children:[(0,i.jsx)(s.thead,{children:(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.th,{children:"Library"}),(0,i.jsx)(s.th,{children:"Small"}),(0,i.jsx)(s.th,{children:"Medium"}),(0,i.jsx)(s.th,{children:"Large"}),(0,i.jsx)(s.th,{children:"Speedup vs Pandas"})]})}),(0,i.jsxs)(s.tbody,{children:[(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.strong,{children:"Veloxx"})}),(0,i.jsx)(s.td,{children:(0,i.jsx)(s.strong,{children:"0.8ms"})}),(0,i.jsx)(s.td,{children:(0,i.jsx)(s.strong,{children:"45ms"})}),(0,i.jsx)(s.td,{children:(0,i.jsx)(s.strong,{children:"450ms"})}),(0,i.jsx)(s.td,{children:(0,i.jsx)(s.strong,{children:"12x faster"})})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"Polars"}),(0,i.jsx)(s.td,{children:"1.2ms"}),(0,i.jsx)(s.td,{children:"52ms"}),(0,i.jsx)(s.td,{children:"520ms"}),(0,i.jsx)(s.td,{children:"10x faster"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"Pandas"}),(0,i.jsx)(s.td,{children:"12ms"}),(0,i.jsx)(s.td,{children:"540ms"}),(0,i.jsx)(s.td,{children:"5.4s"}),(0,i.jsx)(s.td,{children:"1x baseline"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"Dask"}),(0,i.jsx)(s.td,{children:"18ms"}),(0,i.jsx)(s.td,{children:"720ms"}),(0,i.jsx)(s.td,{children:"7.2s"}),(0,i.jsx)(s.td,{children:"0.75x slower"})]})]})]}),"\n",(0,i.jsx)(s.h3,{id:"group-by-aggregations",children:"Group By Aggregations"}),"\n",(0,i.jsx)(s.p,{children:"Grouping data and computing aggregations:"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-rust",metastring:'title="Benchmark Query"',children:'// Group by department and calculate mean salary\r\ndf.group_by(vec!["department".to_string()])?\r\n  .agg(vec![("salary", "mean"), ("age", "count")])\n'})}),"\n",(0,i.jsxs)(s.table,{children:[(0,i.jsx)(s.thead,{children:(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.th,{children:"Library"}),(0,i.jsx)(s.th,{children:"Small"}),(0,i.jsx)(s.th,{children:"Medium"}),(0,i.jsx)(s.th,{children:"Large"}),(0,i.jsx)(s.th,{children:"Memory Efficiency"})]})}),(0,i.jsxs)(s.tbody,{children:[(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.strong,{children:"Veloxx"})}),(0,i.jsx)(s.td,{children:(0,i.jsx)(s.strong,{children:"1.5ms"})}),(0,i.jsx)(s.td,{children:(0,i.jsx)(s.strong,{children:"80ms"})}),(0,i.jsx)(s.td,{children:(0,i.jsx)(s.strong,{children:"800ms"})}),(0,i.jsx)(s.td,{children:(0,i.jsx)(s.strong,{children:"Excellent"})})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"Polars"}),(0,i.jsx)(s.td,{children:"2.1ms"}),(0,i.jsx)(s.td,{children:"95ms"}),(0,i.jsx)(s.td,{children:"950ms"}),(0,i.jsx)(s.td,{children:"Very Good"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"Pandas"}),(0,i.jsx)(s.td,{children:"18ms"}),(0,i.jsx)(s.td,{children:"960ms"}),(0,i.jsx)(s.td,{children:"9.6s"}),(0,i.jsx)(s.td,{children:"Poor"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"Dask"}),(0,i.jsx)(s.td,{children:"25ms"}),(0,i.jsx)(s.td,{children:"1.2s"}),(0,i.jsx)(s.td,{children:"12s"}),(0,i.jsx)(s.td,{children:"Good"})]})]})]}),"\n",(0,i.jsx)(s.h3,{id:"join-operations",children:"Join Operations"}),"\n",(0,i.jsx)(s.p,{children:"Inner joins on common keys:"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-rust",metastring:'title="Benchmark Query"',children:'// Inner join on customer_id\r\ndf1.join(&df2, "customer_id", JoinType::Inner)\n'})}),"\n",(0,i.jsxs)(s.table,{children:[(0,i.jsx)(s.thead,{children:(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.th,{children:"Library"}),(0,i.jsx)(s.th,{children:"Small"}),(0,i.jsx)(s.th,{children:"Medium"}),(0,i.jsx)(s.th,{children:"Large"}),(0,i.jsx)(s.th,{children:"Peak Memory"})]})}),(0,i.jsxs)(s.tbody,{children:[(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.strong,{children:"Veloxx"})}),(0,i.jsx)(s.td,{children:(0,i.jsx)(s.strong,{children:"3.2ms"})}),(0,i.jsx)(s.td,{children:(0,i.jsx)(s.strong,{children:"180ms"})}),(0,i.jsx)(s.td,{children:(0,i.jsx)(s.strong,{children:"1.8s"})}),(0,i.jsx)(s.td,{children:(0,i.jsx)(s.strong,{children:"90MB"})})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"Polars"}),(0,i.jsx)(s.td,{children:"4.1ms"}),(0,i.jsx)(s.td,{children:"210ms"}),(0,i.jsx)(s.td,{children:"2.1s"}),(0,i.jsx)(s.td,{children:"105MB"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"Pandas"}),(0,i.jsx)(s.td,{children:"35ms"}),(0,i.jsx)(s.td,{children:"2.1s"}),(0,i.jsx)(s.td,{children:"21s"}),(0,i.jsx)(s.td,{children:"360MB"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"Dask"}),(0,i.jsx)(s.td,{children:"50ms"}),(0,i.jsx)(s.td,{children:"2.8s"}),(0,i.jsx)(s.td,{children:"28s"}),(0,i.jsx)(s.td,{children:"180MB"})]})]})]}),"\n",(0,i.jsx)(s.h2,{id:"advanced-operations",children:"Advanced Operations"}),"\n",(0,i.jsx)(s.h3,{id:"statistical-computations",children:"Statistical Computations"}),"\n",(0,i.jsx)(s.p,{children:"Computing descriptive statistics:"}),"\n",(0,i.jsxs)(s.table,{children:[(0,i.jsx)(s.thead,{children:(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.th,{children:"Operation"}),(0,i.jsx)(s.th,{children:"Veloxx"}),(0,i.jsx)(s.th,{children:"Polars"}),(0,i.jsx)(s.th,{children:"Pandas"}),(0,i.jsx)(s.th,{children:"Speedup"})]})}),(0,i.jsxs)(s.tbody,{children:[(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"Mean"}),(0,i.jsx)(s.td,{children:(0,i.jsx)(s.strong,{children:"0.5ms"})}),(0,i.jsx)(s.td,{children:"0.8ms"}),(0,i.jsx)(s.td,{children:"6ms"}),(0,i.jsx)(s.td,{children:(0,i.jsx)(s.strong,{children:"12x"})})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"Median"}),(0,i.jsx)(s.td,{children:(0,i.jsx)(s.strong,{children:"1.2ms"})}),(0,i.jsx)(s.td,{children:"1.5ms"}),(0,i.jsx)(s.td,{children:"15ms"}),(0,i.jsx)(s.td,{children:(0,i.jsx)(s.strong,{children:"12.5x"})})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"Std Dev"}),(0,i.jsx)(s.td,{children:(0,i.jsx)(s.strong,{children:"0.8ms"})}),(0,i.jsx)(s.td,{children:"1.1ms"}),(0,i.jsx)(s.td,{children:"8ms"}),(0,i.jsx)(s.td,{children:(0,i.jsx)(s.strong,{children:"10x"})})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"Correlation"}),(0,i.jsx)(s.td,{children:(0,i.jsx)(s.strong,{children:"2.1ms"})}),(0,i.jsx)(s.td,{children:"2.8ms"}),(0,i.jsx)(s.td,{children:"25ms"}),(0,i.jsx)(s.td,{children:(0,i.jsx)(s.strong,{children:"12x"})})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"Describe"}),(0,i.jsx)(s.td,{children:(0,i.jsx)(s.strong,{children:"3.5ms"})}),(0,i.jsx)(s.td,{children:"4.2ms"}),(0,i.jsx)(s.td,{children:"42ms"}),(0,i.jsx)(s.td,{children:(0,i.jsx)(s.strong,{children:"12x"})})]})]})]}),"\n",(0,i.jsx)(s.h3,{id:"complex-queries",children:"Complex Queries"}),"\n",(0,i.jsx)(s.p,{children:"Multi-step data processing pipeline:"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-rust",metastring:'title="Complex Pipeline"',children:'df.filter(&complex_condition)?\r\n  .with_column("profit_margin", &profit_expr)?\r\n  .group_by(vec!["region", "category"])?\r\n  .agg(vec![\r\n    ("revenue", "sum"),\r\n    ("profit_margin", "mean"),\r\n    ("orders", "count")\r\n  ])?\r\n  .sort(vec!["revenue_sum"], false)?\n'})}),"\n",(0,i.jsxs)(s.table,{children:[(0,i.jsx)(s.thead,{children:(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.th,{children:"Dataset Size"}),(0,i.jsx)(s.th,{children:"Veloxx"}),(0,i.jsx)(s.th,{children:"Polars"}),(0,i.jsx)(s.th,{children:"Pandas"}),(0,i.jsx)(s.th,{children:"Memory Peak"})]})}),(0,i.jsxs)(s.tbody,{children:[(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"1M rows"}),(0,i.jsx)(s.td,{children:(0,i.jsx)(s.strong,{children:"95ms"})}),(0,i.jsx)(s.td,{children:"120ms"}),(0,i.jsx)(s.td,{children:"1.2s"}),(0,i.jsx)(s.td,{children:(0,i.jsx)(s.strong,{children:"65MB"})})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"10M rows"}),(0,i.jsx)(s.td,{children:(0,i.jsx)(s.strong,{children:"950ms"})}),(0,i.jsx)(s.td,{children:"1.2s"}),(0,i.jsx)(s.td,{children:"12s"}),(0,i.jsx)(s.td,{children:(0,i.jsx)(s.strong,{children:"650MB"})})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"100M rows"}),(0,i.jsx)(s.td,{children:(0,i.jsx)(s.strong,{children:"9.5s"})}),(0,i.jsx)(s.td,{children:"12s"}),(0,i.jsx)(s.td,{children:"120s"}),(0,i.jsx)(s.td,{children:(0,i.jsx)(s.strong,{children:"6.5GB"})})]})]})]}),"\n",(0,i.jsx)(s.h2,{id:"language-binding-performance",children:"Language Binding Performance"}),"\n",(0,i.jsx)(s.p,{children:"Performance comparison across language bindings:"}),"\n",(0,i.jsx)(s.h3,{id:"python-bindings",children:"Python Bindings"}),"\n",(0,i.jsxs)(s.table,{children:[(0,i.jsx)(s.thead,{children:(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.th,{children:"Operation"}),(0,i.jsx)(s.th,{children:"Veloxx-Python"}),(0,i.jsx)(s.th,{children:"Polars-Python"}),(0,i.jsx)(s.th,{children:"Pandas"}),(0,i.jsx)(s.th,{children:"Overhead"})]})}),(0,i.jsxs)(s.tbody,{children:[(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"CSV Read"}),(0,i.jsx)(s.td,{children:(0,i.jsx)(s.strong,{children:"125ms"})}),(0,i.jsx)(s.td,{children:"155ms"}),(0,i.jsx)(s.td,{children:"1.2s"}),(0,i.jsx)(s.td,{children:(0,i.jsx)(s.strong,{children:"4%"})})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"Filter"}),(0,i.jsx)(s.td,{children:(0,i.jsx)(s.strong,{children:"48ms"})}),(0,i.jsx)(s.td,{children:"55ms"}),(0,i.jsx)(s.td,{children:"540ms"}),(0,i.jsx)(s.td,{children:(0,i.jsx)(s.strong,{children:"6%"})})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"Group By"}),(0,i.jsx)(s.td,{children:(0,i.jsx)(s.strong,{children:"85ms"})}),(0,i.jsx)(s.td,{children:"98ms"}),(0,i.jsx)(s.td,{children:"960ms"}),(0,i.jsx)(s.td,{children:(0,i.jsx)(s.strong,{children:"6%"})})]})]})]}),"\n",(0,i.jsx)(s.h3,{id:"javascriptwasm-bindings",children:"JavaScript/WASM Bindings"}),"\n",(0,i.jsxs)(s.table,{children:[(0,i.jsx)(s.thead,{children:(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.th,{children:"Operation"}),(0,i.jsx)(s.th,{children:"Veloxx-JS"}),(0,i.jsx)(s.th,{children:"D3.js"}),(0,i.jsx)(s.th,{children:"Observable Plot"}),(0,i.jsx)(s.th,{children:"Performance"})]})}),(0,i.jsxs)(s.tbody,{children:[(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"Data Load"}),(0,i.jsx)(s.td,{children:(0,i.jsx)(s.strong,{children:"180ms"})}),(0,i.jsx)(s.td,{children:"450ms"}),(0,i.jsx)(s.td,{children:"380ms"}),(0,i.jsx)(s.td,{children:(0,i.jsx)(s.strong,{children:"2.5x faster"})})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"Transform"}),(0,i.jsx)(s.td,{children:(0,i.jsx)(s.strong,{children:"95ms"})}),(0,i.jsx)(s.td,{children:"280ms"}),(0,i.jsx)(s.td,{children:"220ms"}),(0,i.jsx)(s.td,{children:(0,i.jsx)(s.strong,{children:"2.3x faster"})})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"Aggregate"}),(0,i.jsx)(s.td,{children:(0,i.jsx)(s.strong,{children:"120ms"})}),(0,i.jsx)(s.td,{children:"350ms"}),(0,i.jsx)(s.td,{children:"290ms"}),(0,i.jsx)(s.td,{children:(0,i.jsx)(s.strong,{children:"2.4x faster"})})]})]})]}),"\n",(0,i.jsx)(s.h2,{id:"memory-usage-analysis",children:"Memory Usage Analysis"}),"\n",(0,i.jsx)(s.h3,{id:"peak-memory-consumption",children:"Peak Memory Consumption"}),"\n",(0,i.jsx)(s.p,{children:"Memory usage during operations (1M row dataset):"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-mermaid",children:"graph TD\r\n    A[Dataset: 1M rows, 15 columns] --\x3e B[CSV Reading]\r\n    A --\x3e C[Filtering]\r\n    A --\x3e D[Group By]\r\n    A --\x3e E[Joins]\r\n    \r\n    B --\x3e B1[Veloxx: 45MB]\r\n    B --\x3e B2[Polars: 52MB]\r\n    B --\x3e B3[Pandas: 180MB]\r\n    \r\n    C --\x3e C1[Veloxx: 48MB]\r\n    C --\x3e C2[Polars: 55MB]\r\n    C --\x3e C3[Pandas: 195MB]\r\n    \r\n    D --\x3e D1[Veloxx: 52MB]\r\n    D --\x3e D2[Polars: 62MB]\r\n    D --\x3e D3[Pandas: 220MB]\r\n    \r\n    E --\x3e E1[Veloxx: 90MB]\r\n    E --\x3e E2[Polars: 105MB]\r\n    E --\x3e E3[Pandas: 360MB]\n"})}),"\n",(0,i.jsx)(s.h3,{id:"memory-efficiency-metrics",children:"Memory Efficiency Metrics"}),"\n",(0,i.jsxs)(s.table,{children:[(0,i.jsx)(s.thead,{children:(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.th,{children:"Metric"}),(0,i.jsx)(s.th,{children:"Veloxx"}),(0,i.jsx)(s.th,{children:"Polars"}),(0,i.jsx)(s.th,{children:"Pandas"}),(0,i.jsx)(s.th,{children:"Improvement"})]})}),(0,i.jsxs)(s.tbody,{children:[(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"Base Memory"}),(0,i.jsx)(s.td,{children:"45MB"}),(0,i.jsx)(s.td,{children:"52MB"}),(0,i.jsx)(s.td,{children:"180MB"}),(0,i.jsx)(s.td,{children:(0,i.jsx)(s.strong,{children:"4x less"})})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"Peak Memory"}),(0,i.jsx)(s.td,{children:"90MB"}),(0,i.jsx)(s.td,{children:"105MB"}),(0,i.jsx)(s.td,{children:"360MB"}),(0,i.jsx)(s.td,{children:(0,i.jsx)(s.strong,{children:"4x less"})})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"Memory Growth"}),(0,i.jsx)(s.td,{children:"2x"}),(0,i.jsx)(s.td,{children:"2x"}),(0,i.jsx)(s.td,{children:"2x"}),(0,i.jsx)(s.td,{children:"Same ratio"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"GC Pressure"}),(0,i.jsx)(s.td,{children:"None"}),(0,i.jsx)(s.td,{children:"Low"}),(0,i.jsx)(s.td,{children:"High"}),(0,i.jsx)(s.td,{children:(0,i.jsx)(s.strong,{children:"Zero GC"})})]})]})]}),"\n",(0,i.jsx)(s.h2,{id:"scalability-analysis",children:"Scalability Analysis"}),"\n",(0,i.jsx)(s.h3,{id:"performance-vs-dataset-size",children:"Performance vs Dataset Size"}),"\n",(0,i.jsx)(s.p,{children:"How performance scales with increasing data size:"}),"\n",(0,i.jsxs)(s.table,{children:[(0,i.jsx)(s.thead,{children:(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.th,{children:"Rows"}),(0,i.jsx)(s.th,{children:"Veloxx Time"}),(0,i.jsx)(s.th,{children:"Polars Time"}),(0,i.jsx)(s.th,{children:"Pandas Time"}),(0,i.jsx)(s.th,{children:"Veloxx Memory"})]})}),(0,i.jsxs)(s.tbody,{children:[(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"10K"}),(0,i.jsx)(s.td,{children:"2ms"}),(0,i.jsx)(s.td,{children:"3ms"}),(0,i.jsx)(s.td,{children:"25ms"}),(0,i.jsx)(s.td,{children:"2MB"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"100K"}),(0,i.jsx)(s.td,{children:"20ms"}),(0,i.jsx)(s.td,{children:"28ms"}),(0,i.jsx)(s.td,{children:"250ms"}),(0,i.jsx)(s.td,{children:"20MB"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"1M"}),(0,i.jsx)(s.td,{children:"120ms"}),(0,i.jsx)(s.td,{children:"150ms"}),(0,i.jsx)(s.td,{children:"1.2s"}),(0,i.jsx)(s.td,{children:"45MB"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"10M"}),(0,i.jsx)(s.td,{children:"1.2s"}),(0,i.jsx)(s.td,{children:"1.5s"}),(0,i.jsx)(s.td,{children:"12s"}),(0,i.jsx)(s.td,{children:"450MB"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"100M"}),(0,i.jsx)(s.td,{children:"12s"}),(0,i.jsx)(s.td,{children:"15s"}),(0,i.jsx)(s.td,{children:"120s"}),(0,i.jsx)(s.td,{children:"4.5GB"})]})]})]}),"\n",(0,i.jsx)(s.h3,{id:"parallel-processing",children:"Parallel Processing"}),"\n",(0,i.jsx)(s.p,{children:"Multi-threaded performance (10M rows):"}),"\n",(0,i.jsxs)(s.table,{children:[(0,i.jsx)(s.thead,{children:(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.th,{children:"Threads"}),(0,i.jsx)(s.th,{children:"Veloxx"}),(0,i.jsx)(s.th,{children:"Polars"}),(0,i.jsx)(s.th,{children:"Pandas"}),(0,i.jsx)(s.th,{children:"Efficiency"})]})}),(0,i.jsxs)(s.tbody,{children:[(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"1"}),(0,i.jsx)(s.td,{children:"4.2s"}),(0,i.jsx)(s.td,{children:"5.1s"}),(0,i.jsx)(s.td,{children:"12s"}),(0,i.jsx)(s.td,{children:"Baseline"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"2"}),(0,i.jsx)(s.td,{children:(0,i.jsx)(s.strong,{children:"2.1s"})}),(0,i.jsx)(s.td,{children:"2.6s"}),(0,i.jsx)(s.td,{children:"11s"}),(0,i.jsx)(s.td,{children:(0,i.jsx)(s.strong,{children:"2x speedup"})})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"4"}),(0,i.jsx)(s.td,{children:(0,i.jsx)(s.strong,{children:"1.1s"})}),(0,i.jsx)(s.td,{children:"1.4s"}),(0,i.jsx)(s.td,{children:"10.5s"}),(0,i.jsx)(s.td,{children:(0,i.jsx)(s.strong,{children:"3.8x speedup"})})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"8"}),(0,i.jsx)(s.td,{children:(0,i.jsx)(s.strong,{children:"0.6s"})}),(0,i.jsx)(s.td,{children:"0.8s"}),(0,i.jsx)(s.td,{children:"10s"}),(0,i.jsx)(s.td,{children:(0,i.jsx)(s.strong,{children:"7x speedup"})})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"16"}),(0,i.jsx)(s.td,{children:(0,i.jsx)(s.strong,{children:"0.4s"})}),(0,i.jsx)(s.td,{children:"0.6s"}),(0,i.jsx)(s.td,{children:"9.8s"}),(0,i.jsx)(s.td,{children:(0,i.jsx)(s.strong,{children:"10.5x speedup"})})]})]})]}),"\n",(0,i.jsx)(s.h2,{id:"real-world-benchmarks",children:"Real-World Benchmarks"}),"\n",(0,i.jsx)(s.h3,{id:"e-commerce-analytics",children:"E-commerce Analytics"}),"\n",(0,i.jsx)(s.p,{children:"Processing 10M e-commerce transactions:"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-rust",metastring:'title="E-commerce Pipeline"',children:'// Calculate daily revenue by category and region\r\ndf.filter(&date_range_condition)?\r\n  .with_column("revenue", &Expr::Multiply(\r\n    Box::new(Expr::Column("quantity".to_string())),\r\n    Box::new(Expr::Column("price".to_string()))\r\n  ))?\r\n  .group_by(vec!["date", "category", "region"])?\r\n  .agg(vec![\r\n    ("revenue", "sum"),\r\n    ("quantity", "sum"),\r\n    ("order_id", "count")\r\n  ])?\n'})}),"\n",(0,i.jsxs)(s.table,{children:[(0,i.jsx)(s.thead,{children:(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.th,{children:"Library"}),(0,i.jsx)(s.th,{children:"Processing Time"}),(0,i.jsx)(s.th,{children:"Memory Usage"}),(0,i.jsx)(s.th,{children:"Output Generation"})]})}),(0,i.jsxs)(s.tbody,{children:[(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.strong,{children:"Veloxx"})}),(0,i.jsx)(s.td,{children:(0,i.jsx)(s.strong,{children:"2.3s"})}),(0,i.jsx)(s.td,{children:(0,i.jsx)(s.strong,{children:"180MB"})}),(0,i.jsx)(s.td,{children:(0,i.jsx)(s.strong,{children:"50ms"})})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"Polars"}),(0,i.jsx)(s.td,{children:"2.8s"}),(0,i.jsx)(s.td,{children:"210MB"}),(0,i.jsx)(s.td,{children:"65ms"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"Pandas"}),(0,i.jsx)(s.td,{children:"28s"}),(0,i.jsx)(s.td,{children:"720MB"}),(0,i.jsx)(s.td,{children:"800ms"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"Spark"}),(0,i.jsx)(s.td,{children:"45s"}),(0,i.jsx)(s.td,{children:"2GB"}),(0,i.jsx)(s.td,{children:"1.2s"})]})]})]}),"\n",(0,i.jsx)(s.h3,{id:"time-series-analysis",children:"Time Series Analysis"}),"\n",(0,i.jsx)(s.p,{children:"Processing 100M time series data points:"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-rust",metastring:'title="Time Series Pipeline"',children:'// Calculate rolling averages and detect anomalies\r\ndf.sort(vec!["timestamp"], true)?\r\n  .with_column("rolling_avg", &rolling_mean_expr)?\r\n  .with_column("anomaly", &anomaly_detection_expr)?\r\n  .filter(&Condition::Eq("anomaly".to_string(), Value::Bool(true)))?\n'})}),"\n",(0,i.jsxs)(s.table,{children:[(0,i.jsx)(s.thead,{children:(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.th,{children:"Library"}),(0,i.jsx)(s.th,{children:"Processing Time"}),(0,i.jsx)(s.th,{children:"Memory Peak"}),(0,i.jsx)(s.th,{children:"Anomalies Found"})]})}),(0,i.jsxs)(s.tbody,{children:[(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.strong,{children:"Veloxx"})}),(0,i.jsx)(s.td,{children:(0,i.jsx)(s.strong,{children:"15s"})}),(0,i.jsx)(s.td,{children:(0,i.jsx)(s.strong,{children:"2.1GB"})}),(0,i.jsx)(s.td,{children:(0,i.jsx)(s.strong,{children:"1,247"})})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"Polars"}),(0,i.jsx)(s.td,{children:"18s"}),(0,i.jsx)(s.td,{children:"2.4GB"}),(0,i.jsx)(s.td,{children:"1,247"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"Pandas"}),(0,i.jsx)(s.td,{children:"180s"}),(0,i.jsx)(s.td,{children:"8.5GB"}),(0,i.jsx)(s.td,{children:"1,247"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"InfluxDB"}),(0,i.jsx)(s.td,{children:"120s"}),(0,i.jsx)(s.td,{children:"4.2GB"}),(0,i.jsx)(s.td,{children:"1,247"})]})]})]}),"\n",(0,i.jsx)(s.h2,{id:"performance-optimization-tips",children:"Performance Optimization Tips"}),"\n",(0,i.jsx)(s.h3,{id:"1-use-appropriate-data-types",children:"1. Use Appropriate Data Types"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-rust",children:'// \u2705 Good: Use specific types\r\nSeries::new_i32("age", ages)\r\nSeries::new_f64("salary", salaries)\r\n\r\n// \u274c Avoid: Generic string parsing\r\nSeries::new_string("mixed", mixed_data)\n'})}),"\n",(0,i.jsx)(s.h3,{id:"2-leverage-lazy-evaluation",children:"2. Leverage Lazy Evaluation"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-rust",children:'// \u2705 Good: Chain operations for optimization\r\ndf.lazy()\r\n  .filter(&condition)\r\n  .group_by(vec!["category"])\r\n  .agg(vec![("sales", "sum")])\r\n  .collect()?\n'})}),"\n",(0,i.jsx)(s.h3,{id:"3-optimize-memory-usage",children:"3. Optimize Memory Usage"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-rust",children:"// \u2705 Good: Process in chunks for large datasets\r\nfor chunk in df.chunks(1_000_000) {\r\n    let result = chunk.process()?;\r\n    writer.write(result)?;\r\n}\n"})}),"\n",(0,i.jsx)(s.h3,{id:"4-use-parallel-processing",children:"4. Use Parallel Processing"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-rust",children:'// \u2705 Good: Enable parallel processing\r\ndf.with_parallel(true)\r\n  .group_by(vec!["region"])\r\n  .agg(vec![("revenue", "sum")])?\n'})}),"\n",(0,i.jsx)(s.h2,{id:"benchmark-reproduction",children:"Benchmark Reproduction"}),"\n",(0,i.jsx)(s.p,{children:"To reproduce these benchmarks on your system:"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-bash",children:"# Clone the repository\r\ngit clone https://github.com/Conqxeror/veloxx.git\r\ncd veloxx\r\n\r\n# Run benchmarks\r\ncargo bench\r\n\r\n# Compare with other libraries\r\npython benchmarks/compare.py\r\n\r\n# Generate reports\r\ncargo run --bin benchmark-report\n"})}),"\n",(0,i.jsx)(s.admonition,{title:"Benchmark Methodology",type:"info",children:(0,i.jsx)(s.p,{children:"All benchmarks use realistic datasets and common data processing patterns. Results may vary based on hardware configuration, dataset characteristics, and system load. Benchmarks are continuously updated with each release."})}),"\n",(0,i.jsx)(s.h2,{id:"summary",children:"Summary"}),"\n",(0,i.jsx)(s.p,{children:"Veloxx consistently outperforms traditional data processing libraries:"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"10-12x faster"})," than pandas for most operations"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"3-4x lower memory usage"})," compared to pandas"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Competitive with Polars"})," while maintaining smaller footprint"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Excellent scalability"})," with multi-threaded processing"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Consistent performance"})," across language bindings"]}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:"The performance advantages come from:"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.strong,{children:"Rust's zero-cost abstractions"})}),"\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.strong,{children:"Efficient memory layout and minimal allocations"})}),"\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.strong,{children:"Optimized algorithms for common operations"})}),"\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.strong,{children:"Parallel processing capabilities"})}),"\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.strong,{children:"No garbage collection overhead"})}),"\n"]})]})}function a(e={}){const{wrapper:s}={...(0,d.R)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(x,{...e})}):x(e)}},8453:(e,s,r)=>{r.d(s,{R:()=>l,x:()=>t});var n=r(6540);const i={},d=n.createContext(i);function l(e){const s=n.useContext(d);return n.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function t(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),n.createElement(d.Provider,{value:s},e.children)}}}]);